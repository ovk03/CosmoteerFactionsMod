Part : /BASE_PART
{
	NameKey = "Parts/ElectroBolter"
	IconNameKey = "Parts/ElectroBolterIcon"
	ID = cosmoteer.electro_bolter // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	OtherIDs = [electro_bolt]
	EditorGroup = "WeaponsEnergy"
	DescriptionKey = "Parts/ElectroBolterDesc"
	Cost = 3000
	TypeCategories = [weapon, uses_power, is_crewed]
	Size = [1, 4]
	PhysicalRect = [0, 1, 1, 3]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 5000
	InitialPenetrationResistance = 3
	PenetrationRectType = Normal
	ProhibitAbove = 1
	AllowedDoorLocations
	[
		[-1, 3]
		[1, 3]
		[0, 4]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [13, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [0, 1, 2]
		}
		AutoTargetToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnModes = [1, 2]
		}
		AutoFireToggle
		{
			Type = ModeToggle
			Mode = FireModeToggle
			OnMode = 2
		}

		BatteryStorage
		{
			Type = AmmoStorage
			AmmoType = battery
			MaxAmmo = 4000
		}
		BatteryConsumer
		{
			Type = AmmoConsumer
			AmmoType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, 2.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 3]
					}
					{
						File = "floor_33.png"
						Size = [1, 3]
					}
					{
						File = "floor_66.png"
						Size = [1, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [1, 4]
						Offset = [0, -0.5]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 4]
						Offset = [0, -0.5]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 3]
					}
					{
						File = "walls_33.png"
						Size = [1, 4]
						Offset = [0, -.5]
					}
					{
						File = "walls_66.png"
						Size = [1, 4]
						Offset = [0, -.5]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						Size = [1, 3]
					}
					{
						File = "roof_33.png"
						Size = [1, 3]
					}
					{
						File = "roof_66.png"
						Size = [1, 3]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -.5]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [1, 2]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -.5]
				DamageLevels
				[
					{
						File = "roof_doodads_off.png"
						Size = [1, 2]
						AnimationInterval = 0.1
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_on.png"
						Size = [1, 2]
						Offset = [0, .5]
					}
					{
						File = "roof_windows_on_33.png"
						Size = [1, 3]
					}
					{
						File = "roof_windows_on_66.png"
						Size = [1, 3]
					}
				]
			}
			NonOperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "roof_windows_off.png"
						Size = [1, 2]
						Offset = [0, .5]
					}
					{
						File = "roof_windows_off_33.png"
						Size = [1, 3]
					}
					{
						File = "roof_windows_off_66.png"
						Size = [1, 3]
					}
				]
			}
		}

		Turret
		{
			Type = TurretWeapon
			Location = [.5, .34375] // Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			AutoFireToggle = AutoFireToggle
			FireInterval = .1
			FiringArc = 200d
			RotateSpeed = 360d
			FireThresholdAngle = 1d
			AIFirepowerRating = 600
			Emitter = BulletEmitter
			FirePermissionToggle = FireModeToggle

			AutoTargets
			[
				{
					TargetType = ShipParts
					Toggle = AutoTargetToggle
				}
			]

			BlueprintArcSprite
			{
				Texture = &/INDICATORS/WeaponArc
				Size = [0, 1.5]
				Color = [255, 0, 0, 63]
			}
			BlueprintArcRadius = 10
			BlueprintArcSpriteSegments = 64

			CoverageSectorArc
			{
				Texture = &/INDICATORS/VerticalGradient
				VertexColor = [255, 255, 255, 51]
				QuadCount = 64
			}
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = Turret
		}

		BulletEmitter
		{
			Type = BulletEmitter
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			Location = [.75, 0]
			Spread =1d
			OperationalToggle = IsOperational
			FireDelay = .1
			Bullet = &<../../../shots/minigun_shot/minigun_shot.txt>
			AmmoStorage = BatteryStorage
			AmmoUsed = 100
			MinAmmoUsed = 1
		}

		ChargeEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = Turret
			Location = [.766, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "charge.wav"
					Volume = .25
					Speed = 1.5
				}
			]
		}

		FireEffect
		{
			Type = TriggeredEffects
			ChainedTo = Turret
			Trigger = BulletEmitter
			Location = [.766, 0]
			AnchorMediaEffects = true

			MediaEffects
			[
				&<particles/electro_bolter_shoot.txt>

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "shoot.wav"
					Volume = .3
					SpeedVariation = .15
				}
			]
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [.5, 3.4]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = .45
			Density = .75
		}

		WeaponSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [.34375, 0]
			Rotation = 90d
			Layer = "weapons"
			ResetAnimationTrigger = Turret
			AtlasSprite
			{
				AnimationFiles
				[
					"turret2.png"
					"turret3.png"
					"turret4.png"
					"turret5.png"
					"turret6.png"
					"turret7.png"
					"turret8.png"
					"turret1.png"// Loop back to beginning and clamp there.
				]
				Size = [2, 2]
				AnimationInterval = 0.06
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		AmmoSprites
		{
			Type = AmmoSprites
			Location = [.5, 2.5]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			AmmoLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 3]
				}
				{
					File = "batteries2.png"
					Size = [1, 3]
				}
				{
					File = "batteries3.png"
					Size = [1, 3]
				}
				{
					File = "batteries4.png"
					Size = [1, 3]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [.5, 1.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [.5, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					Delay = &~/Part/Components/Turret/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 5]
			Offset = [0, -.5]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxAmmo) / 1000

		RecPower = &../StatsByCategory/0/Stats/PowerPerSecond
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}

	StatsByCategory
	[
		{
			NameKey = "StatCategories/ElectroBolt"
			Stats
			{
			//	DamagePerShot = &~/Part/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/1/Damage
			//	DamagePerSecond = (&DamagePerShot) * (&ROF)
			//	Damage = [&../DamagePerShot, &../DamagePerSecond]
			//	ShieldDamagePerShot = (&~/Part/Components/BulletEmitter/Bullet/Components/Hit/HitShield/HitEffects/0/Amount) / (&<../shield_gen_small/shield_gen_small.txt>/Part/Components/ArcShield/AmmoDrainPerDamage)
			//	ShieldDamagePerSecond = (&ShieldDamagePerShot) * (&ROF)
			//	ShieldDamage = [&../ShieldDamagePerShot, &../ShieldDamagePerSecond]
			//	PowerDrainPerShot = (&~/Part/Components/BulletEmitter/Bullet/Components/Hit/HitOperational/HitEffects/0/Amount) / 1000
			//	PowerDrainPerSecond = (&PowerDrainPerShot) * (&ROF)
			//	PowerDrain = [&../PowerDrainPerShot, &../PowerDrainPerSecond]
			//	ShieldPenetration = (&~/Part/Components/BulletEmitter/Bullet/Components/Hit/Penetration) / (&<../shield_gen_small/shield_gen_small.txt>/Part/Components/ArcShield/PenetrationResistance/0)
				ROF = 1 / (&~/Part/Components/Turret/FireInterval)
				Range = &~/Part/Components/BulletEmitter/Bullet/Range
				Arc = deg(&~/Part/Components/Turret/FiringArc)
				TurretSpeed = deg(&~/Part/Components/Turret/RotateSpeed)
				ShotSpeed = &~/Part/Components/BulletEmitter/Bullet/Speed
			//	ShotHP = &~/Part/Components/BulletEmitter/Bullet/Components/Targetable/Health
				PowerPerShot = (&~/Part/Components/BulletEmitter/AmmoUsed) / 1000
				PowerPerSecond = (&PowerPerShot) * (&ROF)
				ShotPowerUsage = [&../PowerPerShot, &../PowerPerSecond]
			}
		}
	]
}
